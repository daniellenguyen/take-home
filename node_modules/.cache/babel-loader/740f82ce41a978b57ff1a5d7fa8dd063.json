{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/daniellenguyen/take-home/src/components/Record.js\";\nimport { Button, Card, CardActions, CardContent, FormControl, InputLabel, ListItem, MenuItem, Select } from '@material-ui/core';\nexport default function Record({\n  record,\n  shelf,\n  shelves,\n  dispatch\n}) {\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '260px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Title: \", record.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Artist(s):\", record.artists.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Label: \", record.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Formats: \", record.formats.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: shelf ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => dispatch({\n            type: 'removeRecordFromShelf',\n            shelfId: shelf.id,\n            recordId: record.id\n          }),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this) : Object.keys(shelves).length ? /*#__PURE__*/_jsxDEV(FormControl, {\n          style: {\n            minWidth: '120px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Add to shelf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            \"data-testid\": \"add-shelf\",\n            value: \"\",\n            onChange: evt => dispatch({\n              type: 'addRecordToShelf',\n              shelfId: evt.target.value,\n              recordId: record.id\n            }),\n            children: Object.values(shelves).map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option.id,\n              children: option.name\n            }, option.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, record.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = Record;\n\nvar _c;\n\n$RefreshReg$(_c, \"Record\");","map":{"version":3,"sources":["/Users/daniellenguyen/take-home/src/components/Record.js"],"names":["Button","Card","CardActions","CardContent","FormControl","InputLabel","ListItem","MenuItem","Select","Record","record","shelf","shelves","dispatch","width","title","artists","join","label","formats","type","shelfId","id","recordId","Object","keys","length","minWidth","evt","target","value","values","map","option","name"],"mappings":";;AAAA,SACEA,MADF,EAEEC,IAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,WALF,EAMEC,UANF,EAOEC,QAPF,EAQEC,QARF,EASEC,MATF,QAUO,mBAVP;AAYA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA,OAAjB;AAA0BC,EAAAA;AAA1B,CAAhB,EAAsD;AACnE,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA,8BACE,QAAC,WAAD;AAAA,gCACE;AAAA,gCAAWJ,MAAM,CAACK,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,mCAAcL,MAAM,CAACM,OAAP,CAAeC,IAAf,CAAoB,IAApB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,gCAAWP,MAAM,CAACQ,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,kCAAaR,MAAM,CAACS,OAAP,CAAeF,IAAf,CAAoB,IAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,WAAD;AAAA,kBACGN,KAAK,gBACJ,QAAC,MAAD;AACE,UAAA,OAAO,EAAE,MACPE,QAAQ,CAAC;AACPO,YAAAA,IAAI,EAAE,uBADC;AAEPC,YAAAA,OAAO,EAAEV,KAAK,CAACW,EAFR;AAGPC,YAAAA,QAAQ,EAAEb,MAAM,CAACY;AAHV,WAAD,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADI,GAYFE,MAAM,CAACC,IAAP,CAAYb,OAAZ,EAAqBc,MAArB,gBACF,QAAC,WAAD;AAAa,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAApB;AAAA,kCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AACE,2BAAY,WADd;AAEE,YAAA,KAAK,EAAC,EAFR;AAGE,YAAA,QAAQ,EAAEC,GAAG,IACXf,QAAQ,CAAC;AACPO,cAAAA,IAAI,EAAE,kBADC;AAEPC,cAAAA,OAAO,EAAEO,GAAG,CAACC,MAAJ,CAAWC,KAFb;AAGPP,cAAAA,QAAQ,EAAEb,MAAM,CAACY;AAHV,aAAD,CAJZ;AAAA,sBAWGE,MAAM,CAACO,MAAP,CAAcnB,OAAd,EAAuBoB,GAAvB,CAA2BC,MAAM,iBAChC,QAAC,QAAD;AAA0B,cAAA,KAAK,EAAEA,MAAM,CAACX,EAAxC;AAAA,wBACGW,MAAM,CAACC;AADV,eAAeD,MAAM,CAACX,EAAtB;AAAA;AAAA;AAAA;AAAA,oBADD;AAXH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADE,GAqBA;AAlCN;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,KAAeZ,MAAM,CAACY,EAAtB;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD;KAlDuBb,M","sourcesContent":["import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  FormControl,\n  InputLabel,\n  ListItem,\n  MenuItem,\n  Select,\n} from '@material-ui/core';\n\nexport default function Record({ record, shelf, shelves, dispatch }) {\n  return (\n    <ListItem key={record.id}>\n      <Card style={{ width: '260px' }}>\n        <CardContent>\n          <p>Title: {record.title}</p>\n          <p>Artist(s):{record.artists.join(', ')}</p>\n          <p>Label: {record.label}</p>\n          <p>Formats: {record.formats.join(', ')}</p>\n        </CardContent>\n\n        <CardActions>\n          {shelf ? (\n            <Button\n              onClick={() =>\n                dispatch({\n                  type: 'removeRecordFromShelf',\n                  shelfId: shelf.id,\n                  recordId: record.id,\n                })\n              }\n            >\n              Remove\n            </Button>\n          ) : Object.keys(shelves).length ? (\n            <FormControl style={{ minWidth: '120px' }}>\n              <InputLabel>Add to shelf</InputLabel>\n              <Select\n                data-testid=\"add-shelf\"\n                value=\"\"\n                onChange={evt =>\n                  dispatch({\n                    type: 'addRecordToShelf',\n                    shelfId: evt.target.value,\n                    recordId: record.id,\n                  })\n                }\n              >\n                {Object.values(shelves).map(option => (\n                  <MenuItem key={option.id} value={option.id}>\n                    {option.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          ) : null}\n        </CardActions>\n      </Card>\n    </ListItem>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}