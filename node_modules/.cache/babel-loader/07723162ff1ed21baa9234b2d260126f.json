{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/daniellenguyen/take-home/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useReducer, useState } from 'react';\nimport { Container, Grid } from '@material-ui/core';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { reducer } from './reducer';\nimport RecordsContainer from './components/RecordsContainer';\nimport Shelves from './components/Shelves';\nexport default function App() {\n  _s();\n\n  const [records, setRecords] = useState([]);\n  const [shelves, dispatch] = useReducer(reducer, {});\n  const onDragEnd = useCallback(result => {\n    const {\n      source,\n      destination\n    } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      dispatch({\n        type: 'reorderInShelf',\n        shelfId: source.droppableId,\n        oldIndex: source.index,\n        newIndex: destination.index\n      });\n    } else {\n      dispatch({\n        type: 'moveBetweenShelves',\n        oldShelf: source.droppableId,\n        newShelf: destination.droppableId,\n        oldIndex: source.index,\n        newIndex: destination.index\n      });\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    fetch('https://api.discogs.com/users/blacklight/collection/folders/0/releases').then(resp => resp.json()).then(json => {\n      setRecords(json.releases.map(release => {\n        var _info$labels$0$name, _info$labels, _info$labels$;\n\n        const {\n          id,\n          basic_information: info\n        } = release;\n        return {\n          id: `${id}`,\n          title: info.title,\n          formats: info.formats.map(format => format.name),\n          label: (_info$labels$0$name = (_info$labels = info.labels) === null || _info$labels === void 0 ? void 0 : (_info$labels$ = _info$labels[0]) === null || _info$labels$ === void 0 ? void 0 : _info$labels$.name) !== null && _info$labels$0$name !== void 0 ? _info$labels$0$name : '',\n          artists: info.artists.map(artist => artist.name),\n          date: info.year\n        };\n      }));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Record Shelves App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(RecordsContainer, {\n          records: records,\n          shelves: shelves,\n          dispatch: dispatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n          onDragEnd: onDragEnd,\n          children: /*#__PURE__*/_jsxDEV(Shelves, {\n            records: records,\n            shelves: shelves,\n            dispatch: dispatch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"IRq1kBvFK0xOY0dE6Vjv1QUDybo=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/daniellenguyen/take-home/src/App.js"],"names":["useCallback","useEffect","useReducer","useState","Container","Grid","DragDropContext","reducer","RecordsContainer","Shelves","App","records","setRecords","shelves","dispatch","onDragEnd","result","source","destination","droppableId","type","shelfId","oldIndex","index","newIndex","oldShelf","newShelf","fetch","then","resp","json","releases","map","release","id","basic_information","info","title","formats","format","name","label","labels","artists","artist","date","year"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useReducer, useState } from 'react';\n\nimport { Container, Grid } from '@material-ui/core';\n\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nimport { reducer } from './reducer';\n\nimport RecordsContainer from './components/RecordsContainer';\nimport Shelves from './components/Shelves';\n\nexport default function App() {\n  const [records, setRecords] = useState([]);\n\n  const [shelves, dispatch] = useReducer(reducer, {});\n\n  const onDragEnd = useCallback(\n    result => {\n      const { source, destination } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n        dispatch({\n          type: 'reorderInShelf',\n          shelfId: source.droppableId,\n          oldIndex: source.index,\n          newIndex: destination.index,\n        });\n      } else {\n        dispatch({\n          type: 'moveBetweenShelves',\n          oldShelf: source.droppableId,\n          newShelf: destination.droppableId,\n          oldIndex: source.index,\n          newIndex: destination.index,\n        });\n      }\n    },\n    [dispatch],\n  );\n\n  useEffect(() => {\n    fetch(\n      'https://api.discogs.com/users/blacklight/collection/folders/0/releases',\n    )\n      .then(resp => resp.json())\n      .then(json => {\n        setRecords(\n          json.releases.map(release => {\n            const { id, basic_information: info } = release;\n            return {\n              id: `${id}`,\n              title: info.title,\n              formats: info.formats.map(format => format.name),\n              label: info.labels?.[0]?.name ?? '',\n              artists: info.artists.map(artist => artist.name),\n              date: info.year,\n            };\n          }),\n        );\n      });\n  }, []);\n\n  return (\n    <Container>\n      <h1>Record Shelves App</h1>\n\n      <Grid container spacing={3}>\n        <Grid item xs={3}>\n          <RecordsContainer\n            records={records}\n            shelves={shelves}\n            dispatch={dispatch}\n          />\n        </Grid>\n\n        <Grid item xs={9}>\n          <DragDropContext onDragEnd={onDragEnd}>\n            <Shelves records={records} shelves={shelves} dispatch={dispatch} />\n          </DragDropContext>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}