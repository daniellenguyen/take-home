{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/daniellenguyen/take-home/src/components/Shelf.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nimport { Box, Button, Input, List, ListItem } from '@material-ui/core';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Record from './Record';\nexport default function Shelf({\n  records,\n  shelf,\n  dispatch\n}) {\n  _s();\n\n  const shelfRecords = shelf.records.map(id => records.find(record => id === record.id));\n  const [renaming, setRenaming] = useState(false);\n  const [inputName, setInputName] = useState(shelf.name);\n  const handleSubmit = useCallback(() => {\n    dispatch({\n      type: 'renameShelf',\n      id: shelf.id,\n      name: inputName\n    });\n    setRenaming(false);\n  }, [dispatch, inputName, shelf]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      },\n      children: [renaming ? /*#__PURE__*/_jsxDEV(Input, {\n        variant: \"filled\",\n        value: inputName,\n        onChange: evt => setInputName(evt.target.value),\n        onBlur: handleSubmit,\n        onEnter: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        onClick: () => setRenaming(true),\n        style: {\n          cursor: 'pointer'\n        },\n        children: shelf.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => dispatch({\n          type: 'deleteShelf',\n          id: shelf.id\n        }),\n        style: {\n          marginLeft: '1rem'\n        },\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n      style: {\n        backgroundColor: '#f5f5f5',\n        minHeight: '10rem',\n        marginBottom: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: shelf.id,\n        direction: \"horizontal\",\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(List, {\n          ref: provided.innerRef,\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            overflow: 'scroll'\n          },\n          children: shelfRecords.length ? shelfRecords.map((record, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: record.id,\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"span\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              children: /*#__PURE__*/_jsxDEV(Record, {\n                record: record,\n                shelf: shelf,\n                dispatch: dispatch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this)\n            }, record.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 23\n            }, this)\n          }, record.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No records in shelf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, shelf.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Shelf, \"VNi9cRd0lTXr4VL8lg33t+EapnE=\");\n\n_c = Shelf;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shelf\");","map":{"version":3,"sources":["/Users/daniellenguyen/take-home/src/components/Shelf.js"],"names":["useCallback","useState","Box","Button","Input","List","ListItem","Droppable","Draggable","Record","Shelf","records","shelf","dispatch","shelfRecords","map","id","find","record","renaming","setRenaming","inputName","setInputName","name","handleSubmit","type","display","alignItems","justifyContent","evt","target","value","cursor","marginLeft","backgroundColor","minHeight","marginBottom","provided","snapshot","innerRef","flexDirection","overflow","length","index","draggableProps","dragHandleProps"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,SACEC,GADF,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,QALF,QAMO,mBANP;AAQA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,qBAArC;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAf,EAA6C;AAAA;;AAC1D,QAAMC,YAAY,GAAGF,KAAK,CAACD,OAAN,CAAcI,GAAd,CAAkBC,EAAE,IACvCL,OAAO,CAACM,IAAR,CAAaC,MAAM,IAAIF,EAAE,KAAKE,MAAM,CAACF,EAArC,CADmB,CAArB;AAIA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACoB,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAACW,KAAK,CAACW,IAAP,CAA1C;AAEA,QAAMC,YAAY,GAAGxB,WAAW,CAAC,MAAM;AACrCa,IAAAA,QAAQ,CAAC;AAAEY,MAAAA,IAAI,EAAE,aAAR;AAAuBT,MAAAA,EAAE,EAAEJ,KAAK,CAACI,EAAjC;AAAqCO,MAAAA,IAAI,EAAEF;AAA3C,KAAD,CAAR;AACAD,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAH+B,EAG7B,CAACP,QAAD,EAAWQ,SAAX,EAAsBT,KAAtB,CAH6B,CAAhC;AAKA,sBACE;AAAA,4BACE,QAAC,GAAD;AACE,MAAA,KAAK,EAAE;AACLc,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,UAAU,EAAE,QAFP;AAGLC,QAAAA,cAAc,EAAE;AAHX,OADT;AAAA,iBAOGT,QAAQ,gBACP,QAAC,KAAD;AACE,QAAA,OAAO,EAAC,QADV;AAEE,QAAA,KAAK,EAAEE,SAFT;AAGE,QAAA,QAAQ,EAAEQ,GAAG,IAAIP,YAAY,CAACO,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAH/B;AAIE,QAAA,MAAM,EAAEP,YAJV;AAKE,QAAA,OAAO,EAAEA;AALX;AAAA;AAAA;AAAA;AAAA,cADO,gBASP;AAAI,QAAA,OAAO,EAAE,MAAMJ,WAAW,CAAC,IAAD,CAA9B;AAAsC,QAAA,KAAK,EAAE;AAAEY,UAAAA,MAAM,EAAE;AAAV,SAA7C;AAAA,kBACGpB,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAoBE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,OAAO,EAAE,MAAMV,QAAQ,CAAC;AAAEY,UAAAA,IAAI,EAAE,aAAR;AAAuBT,UAAAA,EAAE,EAAEJ,KAAK,CAACI;AAAjC,SAAD,CAFzB;AAGE,QAAA,KAAK,EAAE;AAAEiB,UAAAA,UAAU,EAAE;AAAd,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA8BE,QAAC,QAAD;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,eAAe,EAAE,SADZ;AAELC,QAAAA,SAAS,EAAE,OAFN;AAGLC,QAAAA,YAAY,EAAE;AAHT,OAFT;AAAA,6BAQE,QAAC,SAAD;AAAW,QAAA,WAAW,EAAExB,KAAK,CAACI,EAA9B;AAAkC,QAAA,SAAS,EAAC,YAA5C;AAAA,kBACG,CAACqB,QAAD,EAAWC,QAAX,kBACC,QAAC,IAAD;AACE,UAAA,GAAG,EAAED,QAAQ,CAACE,QADhB;AAEE,UAAA,KAAK,EAAE;AACLb,YAAAA,OAAO,EAAE,MADJ;AAELc,YAAAA,aAAa,EAAE,KAFV;AAGLC,YAAAA,QAAQ,EAAE;AAHL,WAFT;AAAA,oBAQG3B,YAAY,CAAC4B,MAAb,GACC5B,YAAY,CAACC,GAAb,CAAiB,CAACG,MAAD,EAASyB,KAAT,kBACf,QAAC,SAAD;AAEE,YAAA,WAAW,EAAEzB,MAAM,CAACF,EAFtB;AAGE,YAAA,KAAK,EAAE2B,KAHT;AAAA,sBAKG,CAACN,QAAD,EAAWC,QAAX,kBACC;AAEE,cAAA,GAAG,EAAED,QAAQ,CAACE,QAFhB;AAAA,iBAGMF,QAAQ,CAACO,cAHf;AAAA,iBAIMP,QAAQ,CAACQ,eAJf;AAAA,qCAME,QAAC,MAAD;AACE,gBAAA,MAAM,EAAE3B,MADV;AAEE,gBAAA,KAAK,EAAEN,KAFT;AAGE,gBAAA,QAAQ,EAAEC;AAHZ;AAAA;AAAA;AAAA;AAAA;AANF,eACOK,MAAM,CAACF,EADd;AAAA;AAAA;AAAA;AAAA;AANJ,aACOE,MAAM,CAACF,EADd;AAAA;AAAA;AAAA;AAAA,kBADF,CADD,gBAwBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhCJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AARF,OACOJ,KAAK,CAACI,EADb;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA,kBADF;AAiFD;;GA9FuBN,K;;KAAAA,K","sourcesContent":["import { useCallback, useState } from 'react';\n\nimport {\n  Box,\n  Button,\n  Input,\n  List,\n  ListItem,\n} from '@material-ui/core';\n\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport Record from './Record';\n\nexport default function Shelf({ records, shelf, dispatch }) {\n  const shelfRecords = shelf.records.map(id =>\n    records.find(record => id === record.id),\n  );\n\n  const [renaming, setRenaming] = useState(false);\n  const [inputName, setInputName] = useState(shelf.name);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'renameShelf', id: shelf.id, name: inputName });\n    setRenaming(false);\n  }, [dispatch, inputName, shelf]);\n\n  return (\n    <>\n      <Box\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        {renaming ? (\n          <Input\n            variant=\"filled\"\n            value={inputName}\n            onChange={evt => setInputName(evt.target.value)}\n            onBlur={handleSubmit}\n            onEnter={handleSubmit}\n          />\n        ) : (\n          <h3 onClick={() => setRenaming(true)} style={{ cursor: 'pointer' }}>\n            {shelf.name}\n          </h3>\n        )}\n        <Button\n          variant=\"outlined\"\n          onClick={() => dispatch({ type: 'deleteShelf', id: shelf.id })}\n          style={{ marginLeft: '1rem' }}\n        >\n          Remove\n        </Button>\n      </Box>\n\n      <ListItem\n        key={shelf.id}\n        style={{\n          backgroundColor: '#f5f5f5',\n          minHeight: '10rem',\n          marginBottom: '1rem',\n        }}\n      >\n        <Droppable droppableId={shelf.id} direction=\"horizontal\">\n          {(provided, snapshot) => (\n            <List\n              ref={provided.innerRef}\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                overflow: 'scroll',\n              }}\n            >\n              {shelfRecords.length ? (\n                shelfRecords.map((record, index) => (\n                  <Draggable\n                    key={record.id}\n                    draggableId={record.id}\n                    index={index}\n                  >\n                    {(provided, snapshot) => (\n                      <span\n                        key={record.id}\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <Record\n                          record={record}\n                          shelf={shelf}\n                          dispatch={dispatch}\n                        />\n                      </span>\n                    )}\n                  </Draggable>\n                ))\n              ) : (\n                <p>No records in shelf</p>\n              )}\n            </List>\n          )}\n        </Droppable>\n      </ListItem>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}